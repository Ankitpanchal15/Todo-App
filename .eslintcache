[{"C:\\Users\\Ankit Panchal\\Desktop\\React\\todo-app\\src\\index.js":"1","C:\\Users\\Ankit Panchal\\Desktop\\React\\todo-app\\src\\App.js":"2","C:\\Users\\Ankit Panchal\\Desktop\\React\\todo-app\\src\\reportWebVitals.js":"3","C:\\Users\\Ankit Panchal\\Desktop\\React\\todo-app\\src\\Component\\Input_Block.jsx":"4","C:\\Users\\Ankit Panchal\\Desktop\\React\\todo-app\\src\\Component\\TodoList.jsx":"5","C:\\Users\\Ankit Panchal\\Desktop\\React\\todo-app\\src\\Component\\ListItemText.jsx":"6","C:\\Users\\Ankit Panchal\\Desktop\\React\\todo-app\\src\\Component\\ListItemAction.jsx":"7","C:\\Users\\Ankit Panchal\\Desktop\\React\\todo-app\\src\\Component\\ListBlock.jsx":"8"},{"size":500,"mtime":1611427132421,"results":"9","hashOfConfig":"10"},{"size":1022,"mtime":1611591242257,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":2234,"mtime":1611591835051,"results":"13","hashOfConfig":"10"},{"size":1393,"mtime":1611595445662,"results":"14","hashOfConfig":"10"},{"size":497,"mtime":1611595429173,"results":"15","hashOfConfig":"10"},{"size":1332,"mtime":1611596389814,"results":"16","hashOfConfig":"10"},{"size":994,"mtime":1611596690929,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"gcxfp1",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Ankit Panchal\\Desktop\\React\\todo-app\\src\\index.js",[],["37","38"],"C:\\Users\\Ankit Panchal\\Desktop\\React\\todo-app\\src\\App.js",["39"],"import React, {useState} from 'react'\nimport './index.css';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Input_Block from './Component/Input_Block';\nimport TodoList from './Component/TodoList';\n\nfunction App() {\n  const [input,setInput] = useState({\n    title:\"\",\n    text: \"\"\n  });\n  const [item,setItem] = useState([{\n    title:\"Buy Mango\",\n    text: \"From Market Place\"\n  }\n  ]);\n  const [edit,setEdit] = useState({\n    status:false,\n    id: null\n  }); \n \n  const pass = {\n    input: input,\n    setInput: setInput,\n    item :item,\n    setItem: setItem,\n    edit : edit,\n    setEdit: setEdit\n  }\n\n\n\n  return (\n  <>\n    <Container maxWidth=\"sm\">\n      <div className=\"todo-app\">\n      <Typography variant=\"h4\" component=\"h2\" style={{marginBottom:\"20px\", textAlign:'center'}}>\n      Todo App\n      </Typography>\n\n      <Input_Block pass={pass} />\n      <TodoList  pass={pass}   /> \n      </div>\n      </Container>\n      </>\n  );\n}\n\nexport default App;\n","C:\\Users\\Ankit Panchal\\Desktop\\React\\todo-app\\src\\reportWebVitals.js",[],"C:\\Users\\Ankit Panchal\\Desktop\\React\\todo-app\\src\\Component\\Input_Block.jsx",["40","41","42"],"import React, { useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst Input_Block = (props)=> {\r\nconst {input,setInput,item,setItem,edit,setEdit} = props.pass;\r\n\r\nconst inputEvent = (event)=> {\r\n    event.preventDefault();\r\n    const {name,value} = event.target;\r\n    setInput((prevValue)=> {\r\n      return {\r\n          ...prevValue,\r\n          [name]:value\r\n      }\r\n    })\r\n  }\r\nconst AddItem = ()=> {\r\n    if(input.title !== \"\" && input.text !== \"\" ) {\r\n      setItem((prevVal)=> {\r\n        return [...prevVal,input]\r\n      });\r\n      setInput({\r\n        title:\"\",\r\n        text: \"\"\r\n      });\r\n    } else {\r\n      alert(\"Please Enter Text\");\r\n    }\r\n  }\r\n\r\n  const UpdateItem = ()=> {\r\n    if(input.title !== \"\" && input.text !== \"\" ){\r\n      let update = [...item];\r\n      update[edit.id] = {\r\n          title: input.title,\r\n          text: input.text\r\n      }\r\n      setItem(update);\r\n      setEdit({\r\n        status:false\r\n      });\r\n      setInput({\r\n        title:\"\",\r\n        text: \"\"\r\n      });\r\n    }\r\n  }\r\n\r\n    return (\r\n        <>\r\n        <form  className=\"\" noValidate autoComplete=\"off\">\r\n\r\n        <TextField \r\n        value= {input.title}\r\n        onChange={inputEvent}\r\n        id=\"title\"\r\n        name=\"title\" \r\n        label=\"Title\"\r\n        fullWidth\r\n        style = {{marginBottom:\"20px\"}}\r\n        />\r\n        <TextField\r\n          value= {input.text}\r\n          onChange={inputEvent}\r\n          name='text'\r\n          id=\"outlined-multiline-static\"\r\n          label=\"Text\"\r\n          multiline\r\n          rows={4}\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          style = {{marginBottom:\"20px\"}}\r\n        />\r\n      <Tooltip title=\"Add\">\r\n      <Button onClick={edit.status == false ? AddItem : UpdateItem } variant=\"contained\" color=\"primary\">\r\n       {edit.status == false ?  <AddCircleIcon size={5}/> : <DoneAllIcon/>   } \r\n        </Button>\r\n        </Tooltip>\r\n       \r\n        </form>     \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Input_Block;","C:\\Users\\Ankit Panchal\\Desktop\\React\\todo-app\\src\\Component\\TodoList.jsx",["43","44","45"],"C:\\Users\\Ankit Panchal\\Desktop\\React\\todo-app\\src\\Component\\ListItemText.jsx",["46"],"C:\\Users\\Ankit Panchal\\Desktop\\React\\todo-app\\src\\Component\\ListItemAction.jsx",[],"C:\\Users\\Ankit Panchal\\Desktop\\React\\todo-app\\src\\Component\\ListBlock.jsx",["47","48","49"],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":42,"column":7,"nodeType":"56","endLine":42,"endColumn":34},{"ruleId":"57","severity":1,"message":"58","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":25},{"ruleId":"61","severity":1,"message":"62","line":79,"column":36,"nodeType":"63","messageId":"64","endLine":79,"endColumn":38},{"ruleId":"61","severity":1,"message":"62","line":80,"column":21,"nodeType":"63","messageId":"64","endLine":80,"endColumn":23},{"ruleId":"57","severity":1,"message":"58","line":1,"column":15,"nodeType":"59","messageId":"60","endLine":1,"endColumn":23},{"ruleId":"57","severity":1,"message":"65","line":8,"column":8,"nodeType":"59","messageId":"60","endLine":8,"endColumn":13},{"ruleId":"57","severity":1,"message":"66","line":8,"column":36,"nodeType":"59","messageId":"60","endLine":8,"endColumn":40},{"ruleId":"57","severity":1,"message":"58","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":25},{"ruleId":"57","severity":1,"message":"67","line":5,"column":8,"nodeType":"59","messageId":"60","endLine":5,"endColumn":12},{"ruleId":"61","severity":1,"message":"62","line":11,"column":21,"nodeType":"63","messageId":"64","endLine":11,"endColumn":23},{"ruleId":"61","severity":1,"message":"62","line":20,"column":48,"nodeType":"63","messageId":"64","endLine":20,"endColumn":50},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"react/jsx-pascal-case","Imported JSX component Input_Block must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'input' is assigned a value but never used.","'edit' is assigned a value but never used.","'Grid' is defined but never used.","no-global-assign","no-unsafe-negation"]